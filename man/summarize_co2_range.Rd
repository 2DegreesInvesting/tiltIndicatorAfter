% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jitter_co2_range.R, R/polish_co2_range.R,
%   R/summarize_co2_range.R
\name{jitter_co2_range}
\alias{jitter_co2_range}
\alias{polish_co2_range}
\alias{summarize_co2_range}
\title{Summarize CO2 footprint}
\usage{
jitter_co2_range(data, ...)

polish_co2_range(data)

summarize_co2_range(data)
}
\arguments{
\item{data}{The output of \code{\link[=profile_emissions]{profile_emissions()}} at product level but you can
conveniently pipe the entire result "as is".}

\item{...}{Arguments passed to \link[tiltIndicator:jitter_range]{tiltIndicator::jitter_range}.}
}
\value{
A dataframe
}
\description{
Summarize CO2 footprint
}
\examples{
# styler: off
data <- tibble::tribble(
  ~benchmark, ~emission_profile, ~co2_footprint, ~unit, ~tilt_sector, ~tilt_subsector, ~isic_4digit,
       "all",             "low",             1L,  "m2",    "sector1",    "subsector1",     "'1234'",
       "all",             "low",             2L,  "m2",    "sector1",    "subsector1",     "'1234'",
       "all",            "high",             3L,  "m2",    "sector1",    "subsector1",     "'1234'",
       "all",            "high",             4L,  "m2",    "sector1",    "subsector1",     "'1234'",
      "unit",             "low",             1L,  "m2",    "sector1",    "subsector1",     "'1234'",
      "unit",             "low",             2L,  "m2",    "sector1",    "subsector1",     "'1234'",
      "unit",            "high",             3L,  "m2",    "sector1",    "subsector1",     "'1234'",
      "unit",            "high",             4L,  "m2",    "sector1",    "subsector1",     "'1234'",
)
# styler: off

data |>
  summarize_co2_range()

withr::local_seed(1)
data |>
  summarize_co2_range() |>
  jitter_co2_range(amount = 1)

withr::local_seed(1)
data |>
  summarize_co2_range() |>
  jitter_co2_range(amount = 1) |>
  polish_co2_range()



# Works with the result of `emissions_profile()`
withr::local_options(readr.show_col_types = FALSE)
withr::local_options(tiltIndicatorAfter.output_co2_footprint = TRUE)
companies <- read_csv(toy_emissions_profile_any_companies())
co2 <- read_csv(toy_emissions_profile_products_ecoinvent())
europages_companies <- read_csv(toy_europages_companies())
ecoinvent_activities <- read_csv(toy_ecoinvent_activities())
ecoinvent_europages <- read_csv(toy_ecoinvent_europages())
isic_name <- read_csv(toy_isic_name())

result <- profile_emissions(
  companies,
  co2,
  europages_companies = europages_companies,
  ecoinvent_activities = ecoinvent_activities,
  ecoinvent_europages = ecoinvent_europages,
  isic = isic_name
)

# It works with the product-level result
result |>
  unnest_product() |>
  summarize_co2_range()

# But you can conveniently pipe profile result "as is"
result |>
  summarize_co2_range()
}
\keyword{internal}
